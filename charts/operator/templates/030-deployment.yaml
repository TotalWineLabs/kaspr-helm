{{- if .Values.operator -}}
{{- if .Values.operator.enable -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kaspr.operator.fullname" . }}
  namespace: {{ include "kaspr.operator.namespace" . }}
  labels:
    {{- include "kaspr.operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "kaspr.operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.operator.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kaspr.operator.labels" . | nindent 8 }}
        {{- with .Values.operator.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kaspr.operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.operator.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.operator.securityContext | nindent 12 }}
          image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          command: ["kopf"]
          args:
            - run
            - kaspr/app.py
            {{- if .Values.operator.watchAnyNamespace }}
            - --all-namespaces
            {{- else }}
            {{- $ns := .Values.operator.watchNamespaces -}}
            {{- $opns := include "kaspr.operator.namespace" . -}}
            {{- $ns := append $ns $opns }}
            {{- range $ns }}
            - --namespace={{ . }}
            {{- end }}
            {{- end }}
            - --liveness=http://0.0.0.0:{{.Values.operator.service.port}}/healthz
          env:
            {{- if .Values.operator.env.initialMaxReplicas }}
            - name: INITIAL_MAX_REPLICAS
              value: "{{ .Values.operator.env.initialMaxReplicas }}"
            {{- end }}
            {{- if .Values.operator.env.hpaScaleUpPolicyPodsPerStep }}
            - name: HPA_SCALE_UP_POLICY_PODS_PER_STEP
              value: "{{ .Values.operator.env.hpaScaleUpPolicyPodsPerStep }}"
            {{- end }}
            {{- if .Values.operator.env.hpaScaleUpPolicyPeriodSeconds }}
            - name: HPA_SCALE_UP_POLICY_PERIOD_SECONDS
              value: "{{ .Values.operator.env.hpaScaleUpPolicyPeriodSeconds }}"
            {{- end }}
            {{- if .Values.operator.env.statefulsetDeletionTimeoutSeconds }}
            - name: STATEFULSET_DELETION_TIMEOUT_SECONDS
              value: "{{ .Values.operator.env.statefulsetDeletionTimeoutSeconds }}"
            {{- end }}
            {{- if .Values.operator.env.clientStatusCheckEnabled }}
            - name: CLIENT_STATUS_CHECK_ENABLED
              value: "{{ .Values.operator.env.clientStatusCheckEnabled }}"
            {{- end }}
            {{- if .Values.operator.env.clientStatusCheckTimeoutSeconds }}
            - name: CLIENT_STATUS_CHECK_TIMEOUT_SECONDS
              value: "{{ .Values.operator.env.clientStatusCheckTimeoutSeconds }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.operator.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}